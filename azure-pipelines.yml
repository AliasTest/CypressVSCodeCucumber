# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- cypressmain

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'
   
- script: |
    npm install   
    npm install -g allure-commandline --save-dev  
    npm run smoketest:allure
    npm run report:allure  
  displayName: 'Run a multi-line script'
  
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)/allure-report' 
    Contents: '**' # string. Required. Contents. Default: **.    
    TargetFolder: '$(Build.ArtifactStagingDirectory)' 
    
- task: PublishBuildArtifacts@1
  inputs:   
    PathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'allure-report'
    publishLocation: 'Container'    
# Publish build artifacts to Azure Pipelines
- task: PublishPipelineArtifact@1
  condition: succeededOrFailed()
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    publishLocation: 'pipeline'

- task: Bash@3
  condition: succeededOrFailed()
  inputs:
    targetType: 'inline'
    script: chmod 755 $(Agent.WorkFolder)/_tasks/AllureGenerate_5c975f9d-1c3a-469f-b7c2-8907bf3eacfb/1.0.0/node_modules/allure-commandline/dist/bin/allure

# Publish Allure report to Azure Pipelines
- task: PublishTestResults@2
  displayName: publish allure test results
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '*.html'
    searchFolder: 'allure-report'
    testRunTitle: ublish allure test results
    buildConfiguration: debug
    mergeTestResults: true
    